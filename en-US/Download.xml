<chapter id="CADC_AC_Users_Guide-Download_Chapter">
<title>The Software Repository</title>
<para>The opencadc software is available on a github repository: 
</para>
<screen>
https://github.com/opencadc
</screen>
<para>The opencadc github repository contains a set of software components and libraries:
</para>

<orderedlist>
<listitem>
<para><menuchoice><guimenu>ac</guimenu></menuchoice> : client and server implementations for user and group management</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>apps</guimenu></menuchoice> : client applications</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>tap</guimenu></menuchoice> : client and server implementation of Table Access Protocol (TAP) specification</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>sia</guimenu></menuchoice> : client and server implementations of Simple Image Access (SIA) specification</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>core</guimenu></menuchoice> : core libraries used by modules in other OpenCADC repositories</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>vos</guimenu></menuchoice> : client and server implementations of VOSpace specification</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>uws</guimenu></menuchoice> : client and server implementations of the Universal Worker Service (UWS) specification</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>cdp</guimenu></menuchoice> : client and server implementation of Credential Delegation Protocol (CDP) specification</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>dal</guimenu></menuchoice> : common libraries for IVOA Data Access Layer (DAL) services</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>reg</guimenu></menuchoice> : client and server implementation of IVOA Registry specifications</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>web</guimenu></menuchoice> : client components for the web (html5 and javascript)</para>
</listitem>
<listitem>
<para><menuchoice><guimenu>wcs</guimenu></menuchoice> : Java + JNI wrapper for wcslib</para>
</listitem>
</orderedlist>

<para>A copy of the component can be obtained by:
</para>
<screen>
git clone https://github.com/opencadc/&lt;component_name&gt;
</screen>
<para>or downloaded as .zip file by the github web interface
<mediaobject>
<imageobject>
  <imagedata fileref="./images/download_from_git.jpg" />
</imageobject>
</mediaobject>
</para>

<section id="CADC_AC_Users_Guide-Download_Chapter_Section_1">
<title>Build an opencadc software module</title>

<para>After downloading, each opencadc software module can be built using the <command>ant</command> build system. An ant build file (<command>build.xml</command>) is provided in the home directory of each component. Moreover, using the same tools, a set of functionality tests can be launched to check the system after the deployment.
</para>
<para>
Each component has a set of dependencies, both external and internal. The more reliable way to know the right set of dependencies is to check inside the component build file (<command>build.xml</command>).
</para>

</section>


<section id="CADC_AC_Users_Guide-Download_Chapter_Section_2">
<title>Download and build Access Control module from github</title>

<para>As first step, it is suggested to create a work directory and moving on it, i.e. 
</para>
<screen>
mkdir opencadc
cd opencadc
</screen>
<para>The first module to download is the <command>core</command> module because in its <emphasis role="italic">etc</emphasis> directory the compilation rules for all the opencadc software modules are defined. To download the core module issue:</para>
<screen>
git clone https://github.com/opencadc/&lt;core&gt;
</screen>
<para>Then the compilation process must be suitably customized filling the file <command>/&lt;mypath&gt;/&lt;opencadc&gt;/core/etc/opencadc.properties</command>.
</para>
<para>
The CADC_PREFIX environment variable must be set to contain the <command>core</command> home directory. Example:
</para>
<screen>
export CADC_PREFIX=/&lt;mypath&gt;/&lt;opencadc&gt;/core
</screen>
<para>After the compilation configuration steps, the Access Control module can be downloaded from github:
</para>
<screen>
git clone https://github.com/opencadc/&lt;ac&gt;
</screen>
<para>The internal dependencies needed to build each <command>ac</command> module component and to run the tests can be extratcted by <command>&lt;ac&gt;/&lt;module_name&gt;/build.xml</command> file. 
</para>
<para>In the case of <command>ac</command> modules, the dependencies are listed below as an example.
</para>
<para>
<informaltable frame="all">
<tgroup cols="2">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="3*"/>
<thead><row><entry namest="col1" nameend="col2" align="center">cadcAccessControl-Server</entry></row></thead>
<tbody>
    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Internal dependencies</emphasis></entry></row>
    <row><entry>cadcRegistryClient.jar</entry><entry>https://github.com/opencadc/reg/cadcRegistry</entry></row>
    <row><entry>cadcUtil.jar</entry><entry>https://github.com/opencadc/core/cadcUtil</entry></row>
    <row><entry>cadcLog.jar</entry><entry>https://github.com/opencadc/core/cadcLog</entry></row>
    <row><entry>cadcUWS.jar</entry><entry>https://github.com/opencadc/uws/cadcUWS</entry></row>
    <row><entry>cadcUWS.jar</entry><entry>https://github.com/opencadc/uws/cadcUWS-Server</entry></row>
    <row><entry>cadcAccessControl.jar</entry><entry>https://github.com/opencadc/ca/cadcAccessControl</entry></row>
    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">External dependencies</emphasis></entry></row>
    <row><entry>json.jar</entry><entry>http://central.maven.org/maven2/org/json/json/20140107/json-20140107.jar</entry></row>
    <row><entry>jdom2.jar</entry><entry>http://central.maven.org/maven2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar</entry></row>
    <row><entry>log4j.jar</entry><entry>http://central.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar</entry></row>
    <row><entry>servlet-api.jar</entry><entry>http://central.maven.org/maven2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar</entry></row>
    <row><entry>unboundid-ldapsdk-se.jar</entry><entry>http://central.maven.org/maven2/com/unboundid/unboundid-ldapsdk/3.1.0/unboundid-ldapsdk-3.1.0.jar</entry></row>
    <row><entry>xerces.jar</entry><entry>http://central.maven.org/maven2/xerces/xerces/2.4.0/xerces-2.4.0.jar</entry></row>

    <row><?dbfo bgcolor="#FFFF00"?><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Tests dependencies</emphasis></entry></row>
    <row><entry>junit.jar</entry><entry>http://central.maven.org/maven2/junit/junit/4.11/junit-4.11.jar</entry></row>
    <row><entry>ant-junit.jar</entry><entry>http://central.maven.org/maven2/org/apache/ant/ant-junit/1.9.4/ant-junit-1.9.4.jar</entry></row>
    <row><entry>asm.jar</entry><entry>http://central.maven.org/maven2/asm/asm/3.3.1/asm-3.3.1.jar</entry></row>
    <row><entry>cgilib.jar</entry><entry>http://central.maven.org/maven2/cglib/cglib/3.2.1/cglib-3.2.1.jar</entry></row>
    <row><entry>easymock.jar</entry><entry>http://central.maven.org/maven2/org/easymock/easymock/3.1/easymock-3.1.jar</entry></row>
    <row><entry>objenesis.jar</entry><entry>http://central.maven.org/maven2/org/objenesis/objenesis/2.2/objenesis-2.2.jar</entry></row>
    <row><entry>jsonassert.jar</entry><entry>http://central.maven.org/maven2/org/skyscreamer/jsonassert/1.2.3/jsonassert-1.2.3.jar</entry></row>
    <row><entry>mail.jar</entry><entry>http://central.maven.org/maven2/javax/mail/mail/1.4/mail-1.4.jar</entry></row>
    <row><entry>xerces.jar</entry><entry>http://central.maven.org/maven2/xerces/xerces/2.4.0/xerces-2.4.0.jar</entry></row>
    <row><entry>commons-logging.jar</entry><entry>http://central.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar</entry></row>
</tbody>
</tgroup>
</informaltable>
</para>

<para>
<informaltable frame="all">
<tgroup cols="2">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="3*"/>
<thead><row><entry namest="col1" nameend="col2" align="center">cadcAccessControl-Admin</entry></row></thead>
<tbody>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Internal dependencies</emphasis></entry></row>
    <row><entry>cadcAccessControl.jar</entry><entry>https://github.com/opencadc/ac/cadcAccessControl</entry></row>
    <row><entry>cadcAccessControl-Server.jar</entry><entry>http://github.com/opencadc/ac/cadcAccessControl-Server</entry></row>
    <row><entry>cadcLog.jar</entry><entry>http://github.com/opencadc/core/cadcLog</entry></row>
    <row><entry>cadcUtil.jar</entry><entry>http://github.com/opencadc/core/cadcUtil</entry></row>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">External dependencies</emphasis></entry></row>

    <row><entry>log4j.jar</entry><entry>http://central.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar</entry></row>
    <row><entry>commons-logging.jar</entry><entry>http://central.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar</entry></row>
    <row><entry>unboundid.jar</entry><entry>http://central.maven.org/maven2/com/unboundid/unboundid-ldapsdk/3.1.0/unboundid-ldapsdk-3.1.0.jar</entry></row>
    <row><entry>servlet-api.jar</entry><entry>http://central.maven.org/maven2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar</entry></row>
    <row><entry>mail.jar</entry><entry>http://central.maven.org/maven2/javax/mail/mail/1.4/mail-1.4.jar</entry></row>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Tests dependencies</emphasis></entry></row>
    <row><entry>cadcLog.jar</entry><entry>http://github.com/opencadc/core/cadcLog</entry></row>
    <row><entry>junit.jar</entry><entry>http://central.maven.org/maven2/junit/junit/4.11/junit-4.11.jar</entry></row>
    <row><entry>ant-junit.jar</entry><entry>http://central.maven.org/maven2/org/apache/ant/ant-junit/1.9.4/ant-junit-1.9.4.jar</entry></row>
    <row><entry>asm.jar</entry><entry>http://central.maven.org/maven2/asm/asm/3.3.1/asm-3.3.1.jar</entry></row>
    <row><entry>cgilib.jar</entry><entry>http://central.maven.org/maven2/cglib/cglib/3.2.1/cglib-3.2.1.jar</entry></row>
    <row><entry>easymock.jar</entry><entry>http://central.maven.org/maven2/org/easymock/easymock/3.1/easymock-3.1.jar</entry></row>
    <row><entry>objenesis.jar</entry><entry>http://central.maven.org/maven2/org/objenesis/objenesis/2.2/objenesis-2.2.jar</entry></row>
    <row><entry>jdom2.jar</entry><entry>http://central.maven.org/maven2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar</entry></row>
    <row><entry>json.jar</entry><entry>http://central.maven.org/maven2/org/json/json/20090211/json-20090211.jar</entry></row>
    <row><entry>jsonassert.jar</entry><entry>http://central.maven.org/maven2/org/skyscreamer/jsonassert/1.2.3/jsonassert-1.2.3.jar</entry></row>

</tbody>
</tgroup>
</informaltable>
</para>

<para>
<informaltable frame="all">
<tgroup cols="2">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="3*"/>
<thead><row><entry namest="col1" nameend="col2" align="center">cadcAccessControl</entry></row></thead>
<tbody>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Internal dependencies</emphasis></entry></row>
    <row><entry>cadcUtil.jar</entry><entry>http://github.com/opencadc/core/cadcUtil</entry></row>
    <row><entry>cadcRegistry.jar</entry><entry>http://github.com/opencadc/reg/cadcRegistry</entry></row>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">External dependencies</emphasis></entry></row>
    <row><entry>json.jar</entry><entry>http://central.maven.org/maven2/org/json/json/20090211/json-20090211.jar</entry></row>
    <row><entry>jdom2.jar</entry><entry>http://central.maven.org/maven2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar</entry></row>
    <row><entry>log4j.jar</entry><entry>http://central.maven.org/maven2/log4j/log4j/1.2.17/log4j-1.2.17.jar</entry></row>

    <row><entry namest="col1" nameend="col2" align="center"><emphasis role="bold">Tests dependencies</emphasis></entry></row>
    <row><entry>junit.jar</entry><entry>http://central.maven.org/maven2/junit/junit/4.11/junit-4.11.jar</entry></row>
    <row><entry>ant-junit.jar</entry><entry>http://central.maven.org/maven2/org/apache/ant/ant-junit/1.9.4/ant-junit-1.9.4.jar</entry></row>
    <row><entry>xerces.jar</entry><entry>http://central.maven.org/maven2/xerces/xerces/2.4.0/xerces-2.4.0.jar</entry></row>
    <row><entry>asm.jar</entry><entry>http://central.maven.org/maven2/asm/asm/3.3.1/asm-3.3.1.jar</entry></row>
    <row><entry>cgilib.jar</entry><entry>http://central.maven.org/maven2/cglib/cglib/3.2.1/cglib-3.2.1.jar</entry></row>
    <row><entry>easymock.jar</entry><entry>http://central.maven.org/maven2/org/easymock/easymock/3.1/easymock-3.1.jar</entry></row>
    <row><entry>objenesis.jar</entry><entry>http://central.maven.org/maven2/org/objenesis/objenesis/2.2/objenesis-2.2.jar</entry></row>
    <row><entry>jsonassert.jar</entry><entry>http://central.maven.org/maven2/org/skyscreamer/jsonassert/1.2.3/jsonassert-1.2.3.jar</entry></row>
    <row><entry>mail.jar</entry><entry>http://central.maven.org/maven2/javax/mail/mail/1.4/mail-1.4.jar</entry></row>
</tbody>
</tgroup>
</informaltable>
</para>

<para>
The libraries needed to compile must be downloaded and placed in the right place with the right name, where right is determined by the path and the name expected in the build file <command>build.xml</command> and by the configuration in <command>${CADC_PREFIX}/etc/opencadc.properties</command>. 
</para>
<para>
Just an example. If in the build.xml file it is:
</para>
<screen>
    &lt;property name="cadcUtil"         value="${lib}/cadcUtil.jar" /&gt;
    &lt;property name="easymock"	 value="${ext.dev}/easymock.jar" /&gt;
    &lt;property name="junit"	         value="${ext.dev}/junit.jar" /&gt;
</screen>
<para>
in the <command>${CADC_PREFIX}/etc/opencadc.properties</command> there are the definitions of <command>${lib}</command>, <command>${ext.lib}</command> and <command>${ext.dev}</command>. The file names must be as expected also. The downloaded <emphasis role="italic">easymock</emphasis> library, for example, has the name <emphasis role="italic">easymock-3.1.jar</emphasis>, but in <command>${ext.dev}</command> must be renamed or symbolik-linked to <emphasis role="italic">easymock.jar</emphasis>. 
</para>
<para>
When all the needed libraries are in the right place, then the compilation can be run. As an example, the commands to compile cadcAccessControl are:
</para>
<screen>
cd ${CADC_PREFIX}/../ac/cadcAccessControl
ant build
</screen>

</section>

</chapter>
